{"version":3,"sources":["App.md","App.js","index.js"],"names":["Previewer","props","className","id","dangerouslySetInnerHTML","__html","marked","text","setOptions","breaks","sanitizer","DOMpurify","sanitize","App","state","handleChange","bind","e","this","setState","target","value","fetch","DEFAULT_PATH","then","response","loaded","onChange","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAAe,MAA0B,+B,OCWzC,SAASA,EAAWC,GAElB,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,0BACA,qBAAKC,GAAG,UAAUC,wBAJE,CAACC,OAAQC,IAAOL,EAAMM,OAIaL,UAAU,mBAVvEI,IAAOE,WAAW,CAChBC,QAAQ,EACRC,UAAWC,IAAUC,a,IA6CRC,E,kDA/Bb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IACDa,MAAQ,CACXP,KAAM,IAER,EAAKQ,aAAe,EAAKA,aAAaC,KAAlB,gBALH,E,gDAOnB,SAAaC,GACXC,KAAKC,SAAS,CAACZ,KAAMU,EAAEG,OAAOC,U,+BAEhC,WAAqB,IAAD,OAClBC,MAAMC,GACHC,MAAK,SAAAC,GAAQ,OAAKA,EAASlB,UAC3BiB,MAAK,SAAAjB,GAAI,OAAI,EAAKY,SAAS,CAACZ,KAAMA,EAAMmB,QAAQ,S,oBAGrD,WACE,OACE,sBAAKxB,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,4BACA,0BAAUC,GAAG,SAASD,UAAU,cAAcmB,MAAOH,KAAKJ,MAAMP,KAAMoB,SAAUT,KAAKH,kBAEvF,cAACf,EAAD,CAAWO,KAAMW,KAAKJ,MAAMP,OAE5B,mBAAGL,UAAU,MAAb,SAAmB,yD,GA1BT0B,IAAMC,WCjBxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ead15fdd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/App.5009dff0.md\";","import './App.css';\nimport React from 'react';\nimport marked from 'marked';\nimport DOMpurify from 'dompurify';\nimport DEFAULT_PATH from './App.md';\n\nmarked.setOptions({\n  breaks: true,\n  sanitizer: DOMpurify.sanitize()\n})\n\nfunction Previewer (props) {\n  const htmlText = () => ({__html: marked(props.text)});\n  return (\n    <div className=\"col\">\n      <h1 className=\"col-header\">HTML output:</h1>\n      <div id=\"preview\" dangerouslySetInnerHTML={htmlText()} className=\"col-content\" />\n    </div>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(e) {\n    this.setState({text: e.target.value});\n  }\n  componentDidMount() {\n    fetch(DEFAULT_PATH)\n      .then(response => (response.text()))\n      .then(text => this.setState({text: text, loaded: true}));\n  }\n\n  render() {    \n    return (\n      <div className=\"flex-grid\">\n        <div className=\"col\">\n          <h1 className=\"col-header\">Markdown text:</h1>\n          <textarea id=\"editor\" className=\"col-content\" value={this.state.text} onChange={this.handleChange} />\n        </div>\n        <Previewer text={this.state.text} />\n        {/* <Signature /> */}\n        <p className=\"row\"><em>by eastraining</em></p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}